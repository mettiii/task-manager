{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\abera\\\\task-manager\\\\src\\\\TaskContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useReducer } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskContext = /*#__PURE__*/createContext();\nconst initialState = {\n  tasks: []\n};\nfunction taskReducer(state, action) {\n  switch (action.type) {\n    case 'ADD_TASK':\n      return {\n        tasks: [...state.tasks, {\n          id: Date.now(),\n          text: action.payload,\n          completed: false\n        }]\n      };\n    case 'TOGGLE_TASK':\n      return {\n        tasks: state.tasks.map(task => task.id === action.payload ? {\n          ...task,\n          completed: !task.completed\n        } : task)\n      };\n    case 'REMOVE_TASK':\n      return {\n        tasks: state.tasks.filter(task => task.id !== action.payload)\n      };\n    default:\n      return state;\n  }\n}\nfunction TaskProvider({\n  children\n}) {\n  _s();\n  const [state, dispatch] = useReducer(taskReducer, initialState);\n  return /*#__PURE__*/_jsxDEV(TaskContext.Provider, {\n    value: {\n      state,\n      dispatch\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_s(TaskProvider, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n_c = TaskProvider;\nexport { TaskContext, TaskProvider };\nvar _c;\n$RefreshReg$(_c, \"TaskProvider\");","map":{"version":3,"names":["React","createContext","useReducer","jsxDEV","_jsxDEV","TaskContext","initialState","tasks","taskReducer","state","action","type","id","Date","now","text","payload","completed","map","task","filter","TaskProvider","children","_s","dispatch","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/abera/task-manager/src/TaskContext.js"],"sourcesContent":["import React, { createContext, useReducer } from 'react';\r\n\r\nconst TaskContext = createContext();\r\n\r\nconst initialState = {\r\n  tasks: [],\r\n};\r\n\r\nfunction taskReducer(state, action) {\r\n  switch (action.type) {\r\n    case 'ADD_TASK':\r\n      return { tasks: [...state.tasks, { id: Date.now(), text: action.payload, completed: false }] };\r\n    case 'TOGGLE_TASK':\r\n      return {\r\n        tasks: state.tasks.map(task =>\r\n          task.id === action.payload ? { ...task, completed: !task.completed } : task\r\n        ),\r\n      };\r\n    case 'REMOVE_TASK':\r\n      return { tasks: state.tasks.filter(task => task.id !== action.payload) };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nfunction TaskProvider({ children }) {\r\n  const [state, dispatch] = useReducer(taskReducer, initialState);\r\n  return (\r\n    <TaskContext.Provider value={{ state, dispatch }}>\r\n      {children}\r\n    </TaskContext.Provider>\r\n  );\r\n}\r\n\r\nexport { TaskContext, TaskProvider };"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzD,MAAMC,WAAW,gBAAGJ,aAAa,CAAC,CAAC;AAEnC,MAAMK,YAAY,GAAG;EACnBC,KAAK,EAAE;AACT,CAAC;AAED,SAASC,WAAWA,CAACC,KAAK,EAAEC,MAAM,EAAE;EAClC,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAK,UAAU;MACb,OAAO;QAAEJ,KAAK,EAAE,CAAC,GAAGE,KAAK,CAACF,KAAK,EAAE;UAAEK,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC;UAAEC,IAAI,EAAEL,MAAM,CAACM,OAAO;UAAEC,SAAS,EAAE;QAAM,CAAC;MAAE,CAAC;IAChG,KAAK,aAAa;MAChB,OAAO;QACLV,KAAK,EAAEE,KAAK,CAACF,KAAK,CAACW,GAAG,CAACC,IAAI,IACzBA,IAAI,CAACP,EAAE,KAAKF,MAAM,CAACM,OAAO,GAAG;UAAE,GAAGG,IAAI;UAAEF,SAAS,EAAE,CAACE,IAAI,CAACF;QAAU,CAAC,GAAGE,IACzE;MACF,CAAC;IACH,KAAK,aAAa;MAChB,OAAO;QAAEZ,KAAK,EAAEE,KAAK,CAACF,KAAK,CAACa,MAAM,CAACD,IAAI,IAAIA,IAAI,CAACP,EAAE,KAAKF,MAAM,CAACM,OAAO;MAAE,CAAC;IAC1E;MACE,OAAOP,KAAK;EAChB;AACF;AAEA,SAASY,YAAYA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EAClC,MAAM,CAACd,KAAK,EAAEe,QAAQ,CAAC,GAAGtB,UAAU,CAACM,WAAW,EAAEF,YAAY,CAAC;EAC/D,oBACEF,OAAA,CAACC,WAAW,CAACoB,QAAQ;IAACC,KAAK,EAAE;MAAEjB,KAAK;MAAEe;IAAS,CAAE;IAAAF,QAAA,EAC9CA;EAAQ;IAAAK,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B;AAACP,EAAA,CAPQF,YAAY;AAAAU,EAAA,GAAZV,YAAY;AASrB,SAAShB,WAAW,EAAEgB,YAAY;AAAG,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}