{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\abera\\\\task-manager\\\\src\\\\component\\\\TaskList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useC } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TaskList() {\n  _s();\n  const {\n    state,\n    dispatch\n  } = useContext(TaskContext);\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: state.tasks.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          textDecoration: task.completed ? \"line-through\" : \"none\"\n        },\n        children: task.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => dispatch({\n          type: \"TOGGLE_TASK\",\n          payload: task.id\n        }),\n        children: task.completed ? \"Undo\" : \"Complete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => dispatch({\n          type: \"REMOVE_TASK\",\n          payload: task.id\n        }),\n        children: \"Remove\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }, this)]\n    }, task.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n}\n_s(TaskList, \"QMdo+h1+fLbTriZQ0QN6uukzyow=\");\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","useC","jsxDEV","_jsxDEV","TaskList","_s","state","dispatch","useContext","TaskContext","children","tasks","map","task","style","textDecoration","completed","text","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","payload","id","_c","$RefreshReg$"],"sources":["C:/Users/abera/task-manager/src/component/TaskList.jsx"],"sourcesContent":["import React, {useC} from \"react\";\r\n\r\nfunction TaskList() {\r\n  const { state, dispatch } = useContext(TaskContext);\r\n\r\n  return (\r\n    <ul>\r\n      {state.tasks.map((task) => (\r\n        <li key={task.id}>\r\n          <span\r\n            style={{ textDecoration: task.completed ? \"line-through\" : \"none\" }}\r\n          >\r\n            {task.text}\r\n          </span>\r\n          <button\r\n            onClick={() => dispatch({ type: \"TOGGLE_TASK\", payload: task.id })}\r\n          >\r\n            {task.completed ? \"Undo\" : \"Complete\"}\r\n          </button>\r\n          <button\r\n            onClick={() => dispatch({ type: \"REMOVE_TASK\", payload: task.id })}\r\n          >\r\n            Remove\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default TaskList;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,IAAI,QAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAM;IAAEC,KAAK;IAAEC;EAAS,CAAC,GAAGC,UAAU,CAACC,WAAW,CAAC;EAEnD,oBACEN,OAAA;IAAAO,QAAA,EACGJ,KAAK,CAACK,KAAK,CAACC,GAAG,CAAEC,IAAI,iBACpBV,OAAA;MAAAO,QAAA,gBACEP,OAAA;QACEW,KAAK,EAAE;UAAEC,cAAc,EAAEF,IAAI,CAACG,SAAS,GAAG,cAAc,GAAG;QAAO,CAAE;QAAAN,QAAA,EAEnEG,IAAI,CAACI;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,eACPlB,OAAA;QACEmB,OAAO,EAAEA,CAAA,KAAMf,QAAQ,CAAC;UAAEgB,IAAI,EAAE,aAAa;UAAEC,OAAO,EAAEX,IAAI,CAACY;QAAG,CAAC,CAAE;QAAAf,QAAA,EAElEG,IAAI,CAACG,SAAS,GAAG,MAAM,GAAG;MAAU;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/B,CAAC,eACTlB,OAAA;QACEmB,OAAO,EAAEA,CAAA,KAAMf,QAAQ,CAAC;UAAEgB,IAAI,EAAE,aAAa;UAAEC,OAAO,EAAEX,IAAI,CAACY;QAAG,CAAC,CAAE;QAAAf,QAAA,EACpE;MAED;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA,GAfFR,IAAI,CAACY,EAAE;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAgBZ,CACL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAET;AAAChB,EAAA,CA1BQD,QAAQ;AAAAsB,EAAA,GAARtB,QAAQ;AA4BjB,eAAeA,QAAQ;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}